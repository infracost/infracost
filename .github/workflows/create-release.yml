name: Upload Release Asset

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build project
        run: |
          make release

      - name: Release
        run: go run tools/release/main.go
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_ORG }}/${{ secrets.DOCKER_REPOSITORY }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          push: true

      - name: Docker meta (CI)
        id: meta-ci
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_ORG }}/${{ secrets.DOCKER_REPOSITORY }}
          flavor: |
            prefix=ci-,onlatest=true
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker images (CI)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.ci
          platforms: linux/amd64
          tags: ${{ steps.meta-ci.outputs.tags }}
          push: true

  update-homebrew-formula:
    if: ${{ !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') }}
    name: Update Homebrew formula
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install brew
        run: |
          # Add brew to the path. This is required as brew is no longer supported by runner-images.
          # see: https://github.com/actions/runner-images/issues/6283 for more context
          echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH
          # Setup brew environment for coming steps.
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

      - uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{secrets.HOMEBREW_RELEASE_TOKEN}}
          formula: infracost

  update-download-redirects:
    if: ${{ !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') }}
    name: Upload Download Redirects
    needs: build
    uses: ./.github/workflows/update-download-redirects.yml
    with:
      version: ${{ github.ref_name }}
    secrets:
      AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  update-fig-autocomplete-spec:
    if: ${{ !contains(github.ref, '-alpha') && !contains(github.ref, '-beta') }}
    name: Update Fig autocomplete spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get the new version
        id: version
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Generate the spec
        run: |
          make build
          ./build/infracost fig-autocomplete > fig-spec.ts
      - name: Create Autocomplete PR
        uses: withfig/push-to-fig-autocomplete-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          autocomplete-spec-name: infracost
          spec-path: fig-spec.ts
          diff-based-versioning: true
          new-spec-version: ${{ steps.version.outputs.tag }}
          use-minor-base: true
